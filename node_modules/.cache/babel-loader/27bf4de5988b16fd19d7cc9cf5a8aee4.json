{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport narutoImg from '../../images/naruto.png';\nimport jutsoSound from '../../sounds/jutso.mp3';\nimport { Quotes } from '../../components';\nimport { getQuote } from '../../services';\nconst audio = new Audio(jutsoSound);\nexport function App() {\n  _s();\n\n  const isMounted = useRef(true);\n  const [quote, setQuote] = useState({\n    speaker: 'Loading speaker...',\n    quote: 'Loading Quote'\n  }); //const onUpdate = async () => {\n\n  const resQuote =\n  /*await*/\n  getQuote();\n  console.log(quote);\n  /*\r\n      if (isMounted.current) {\r\n        setQuote(resQuote);\r\n        audio.play();\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      onUpdate();\r\n  \r\n      return () => {\r\n        isMounted.current = false;\r\n      };\r\n    }, []);\r\n  \r\n    return (\r\n      <Content>\r\n        <Quotes {...quote} onUpdate={onUpdate} />\r\n        <NarutoImg alt=\"Naruto holding a kunai\" src={narutoImg} />\r\n      </Content>\r\n    );\r\n  }\r\n  \r\n  const Content = styled.div`\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    padding: 0 50px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `;\r\n  \r\n  const NarutoImg = styled.img`\r\n    max-width: 50vw;\r\n    align-self: flex-end;\r\n  `;*/\n}\n\n_s(App, \"n8PKOwvdB88bsYAw7qUBeQWndtI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","narutoImg","jutsoSound","Quotes","getQuote","audio","Audio","App","isMounted","quote","setQuote","speaker","resQuote","console","log"],"sources":["F:/Aulas e Estudo de Programação/Workspace/ReactJs-frases/src/pages/app/App.js"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport narutoImg from '../../images/naruto.png';\r\nimport jutsoSound from '../../sounds/jutso.mp3';\r\nimport { Quotes } from '../../components';\r\nimport { getQuote } from '../../services';\r\n\r\nconst audio = new Audio(jutsoSound);\r\n\r\nexport function App() {\r\n  const isMounted = useRef(true);\r\n  const [quote, setQuote] = useState({\r\n    speaker: 'Loading speaker...',\r\n    quote: 'Loading Quote'\r\n  });\r\n\r\n  //const onUpdate = async () => {\r\n    const resQuote = /*await*/ getQuote();\r\n\r\n    console.log(quote);\r\n/*\r\n    if (isMounted.current) {\r\n      setQuote(resQuote);\r\n      audio.play();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onUpdate();\r\n\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Content>\r\n      <Quotes {...quote} onUpdate={onUpdate} />\r\n      <NarutoImg alt=\"Naruto holding a kunai\" src={narutoImg} />\r\n    </Content>\r\n  );\r\n}\r\n\r\nconst Content = styled.div`\r\n  height: 100vh;\r\n  box-sizing: border-box;\r\n  padding: 0 50px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NarutoImg = styled.img`\r\n  max-width: 50vw;\r\n  align-self: flex-end;\r\n`;*/\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,UAAV,CAAd;AAEA,OAAO,SAASK,GAAT,GAAe;EAAA;;EACpB,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;IACjCc,OAAO,EAAE,oBADwB;IAEjCF,KAAK,EAAE;EAF0B,CAAD,CAAlC,CAFoB,CAOpB;;EACE,MAAMG,QAAQ;EAAG;EAAUR,QAAQ,EAAnC;EAEAS,OAAO,CAACC,GAAR,CAAYL,KAAZ;EACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;GAhDeF,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}